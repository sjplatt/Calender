<%= render "header" %>


<style>

.tab {
  cursor: pointer;
}
.tab-display {
  margin-top: 10px;
  margin-bottom: 10px;
}
.button-container {
  text-align: center;
}
.tooltip-title {
  font-size: 30px;
}

</style>






<div class="container">

<div class="row tab-display">

  <div class="col s9">
    <ul class="tabs">
      <li class="tab" data-category="all"><a class="active">All</a></li>
    <% @categories.each do |c| %>
      <li class="tab" data-category=<%= c %>><a><%= c %></a></li>
    <% end %>
    </ul>
  </div>

  <div class="col s3 button-container">
    <a class="btn-floating btn-large waves-effect waves-light red modal-trigger" href="#event-creator"><i class="material-icons">add</i></a>
  </div>

</div>

<div class="row">

  <div class="col s9">
    <div class="card">
    <div class="card-content" id="calendar"></div>
    </div>
  </div>

  <div class="col s3">
    <div class="card">
    <div class="card-content" id="friends">
      <span class="card-title grey-text text-darken-4">Friends</span>
      <i class="material-icons right">more_vert</i>
      <ul class="collection">
      </ul>
    </div>
  </div>

</div>

</div>



<div id="event-creator" class="modal modal-fixed-footer">
  <div class="modal-content">
    <form class="col s12">

      <div class="row">
        <div class="input-field col s12">
          <input type="text" id="name">
          <label for="name">Event name</label>
        </div>
      </div>

      <div class="row">
        <div class="input-field col s6">
          <input placeholder="2015-09-04T20:00:00" type="text" id="startdate">
          <label for="startdate">Start date</label>
        </div>
        <div class="input-field col s6">
          <input placeholder="2015-09-06T09:00:00" type="text" id="enddate">
          <label for="enddate">End date</label>
        </div>
      </div>

      <div class="row">
        <div class="input-field col s6">
          <input type="text" id="location">
          <label for="location">Location</label>
        </div>
        <div class="input-field col s6">
          <input type="text" id="website">
          <label for="website">Website</label>
        </div>
      </div>

      <div class="row">
        <div class="input-field col s12">
          <textarea id="description" class="materialize-textarea"></textarea>
          <label for="description">Description</label>
        </div>
      </div>
    
    <div id="category">Category:
    <form id="category-form">
    <% @categories.each do |c| %>
      <p>
      <input type="radio" <%= if c.eql?("Everyone") then 'checked="checked"' end %> name="category" id="category-<%=c.gsub(/\W/,'-')%>" data-category="<%= c %>">
      <label for="category-<%=c.gsub(/\W/,'-')%>"><%= c %></label>
      </p>
    <% end %>
    </form>
    </div>

    <br>
    
    <div id="invited">Invite others:
    <form id="invite-form">
    <% @friends.each do |f| %>
      <p>
      <input type="checkbox" name="invited" id="invited-<%=f.facebookid%>" data-id=<%=f.facebookid%>>
      <label for="invited-<%=f.facebookid%>"><%= f.name %></label>
      </p>
    <% end %>
    </form>
    </div>

    <br>
  </div>

  <div class="modal-footer">
    <a href="#!" id="event-done" class="modal-action modal-close waves-effect waves-green btn-flat">Done</a>
  </div>
</div>





<script>



$(document).ready(function() {
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '922632911135836',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.4' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));
  
  function testAPI() {
    console.log('Welcome!');

    FB.api('/me/friends?fields=id,name,picture', function(friends_response) {
      console.log(friends_response);
      var friends = friends_response.data;
      var friends_list = $("#friends .collection");

      for (var i = 0; i < Math.min(4,friends.length); i++) {
        friends_list.append(
          '<li class="collection-item avatar">\
          <img src="' + friends[i].picture.data.url + '" class="circle"/>\
          <a href="' + window.location.href.replace(/view_id=.*/, "view_id="+friends[i].id) + '">' + friends[i].name + '</a>\
          </li>');
      }
    });
  }







  $("#logout").click(function() {
    FB.logout(function(response) {
    });
  });

  var events = [];

  $('#calendar').fullCalendar({
  });

  $("#calendar").fullCalendar("addEventSource",events);

  $("#event-done").click(function() {
    var title = $("#name").val();
    var start = $("#startdate").val();
    var end = $("#enddate").val();
    var location = $("#location").val();
    var url = $("#website").val();
    var description = $("#description").val();

    var category = $('input[name="category"]:checked').parent().text().trim();
    //console.log(category);

    var invited = [];
    $('input[name="invited"]:checked').each(function(index,elem) {
      invited.push($(elem).attr("data-id"));
    });
    //console.log(invited);

    var eventObj = {
      title: title, //
      start: start, //
      end: end, //
      location: location,
      url: url, 
      description: description,
      category: category,
      invited: invited
    };

    events.push(eventObj);

    //var eventObj = addToCalendar(title,start,end,location,url,description,category,invited);

    //addExtraAttrsTo(title);

    // Readd everything in events to calendar
    readdEvents(events);
    // Once everything is added using fullCal, custom attrs are lost; readd custom attributes to EVERYTHING
    for (var i = 0; i < events.length; i++) {
      readdExtraAttrsTo(events[i]);
    }

    // ADD TO DB
    create_event(eventObj, "<%= @user.facebookid %>");
  });



  function getNames(ids_arr) {
    $.ajax("/ajax/get_names",
      {ids:ids_arr},
      function(response) {
      });
  }



  function readdEvents(events) {
    console.log(events);
    $("#calendar").fullCalendar("removeEvents");
    $("#calendar").fullCalendar("addEventSource",events);
  }

  function readdExtraAttrsTo(infoObj) {
    // Add extra attributes onto event's div
    $("span.fc-title").each(function(index,elem) {

      if ($(elem).text() == infoObj.title) {
        $(elem).parent().parent()
        .attr("href", "#event-" + infoObj.title.replace(/\W/,"-")).
        addClass("modal-trigger");

        $(elem).parent()
        .attr("data-location", infoObj.location)
        .attr("data-url", infoObj.url)
        .attr("data-description", infoObj.description)
        .attr("data-category", infoObj.category)
        .attr("data-invited", infoObj.invited.toString());

        var eventPopupHTML =
          '<div id="event-' + infoObj.title.replace(/\W/,"-") + '" class="modal modal-fixed-footer">\
          <div class="modal-content">\
          <span class="tooltip-title">' + infoObj.title + '</span><br>\
          <span class="tooltip-text">' + infoObj.start + ' to ' + infoObj.end + '</span><br>\
          <span class="tooltip-heading">Location:</span>\
          <span class="tooltip-text">' + infoObj.location + '</span><br>\
          <span class="tooltip-text"><a href="' + infoObj.url + '">Website</a></span><br>\
          <span class="tooltip-heading">Description:</span>\
          <span class="tooltip-text">' + infoObj.description + '</span><br>\
          <span class="tooltip-heading">Visible to friends in category:</span>\
          <span class="tooltip-text">' + infoObj.category + '<span><br>\
          <span class="tooltip-heading">Invited:</span>\
          <span class="tooltip-text invited-names"></span>\
          <div class="row" style="margin-bottom:10px">\
            <div class="input-field col s6 offset-s6">\
              <textarea id="comment" class="materialize-textarea"></textarea>\
              <label for="comment">Leave a comment...</label>\
            </div>\
          </div>\
          <div style="text-align:right">\
            <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Submit</a>\
          </div>\
          </div>\
          <div class="modal-footer">\
          <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Done</a>\
          <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Delete</a>\
          <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Edit</a>\
          </div>\
          </div>';



        $("body").append(eventPopupHTML);
      }
    })
  }
  

  // POST /ajax/create_event
  function create_event(eventObj, login_id) {
    $.post("/ajax/create_event",
      {eventObj: eventObj,
        login_id: login_id},
      function(data) {
        //console.log(data);
      });
  }


  // Load everything from DB into events
  <% @events.each do |e| %>
  events.push({
    title: "<%=e.name%>",
    start: "<%=e.starttime%>",
    end: "<%=e.endtime%>",
    location: "<%=e.location%>",
    url: "<%=e.website%>",
    description: "<%=e.description%>",
    category: "<%=e.hostclass%>",
    invited: <%=[]||e.attending.html_safe%>});
  <% end %>

  // Initial adding into calendar using fullCal
  readdEvents(events);
  // Initial adding of custom attributes
  <% @events.each do |e| %>
    readdExtraAttrsTo({
    title: "<%=e.name%>",
    start: "<%=e.starttime%>",
    end: "<%=e.endtime%>",
    location: "<%=e.location%>",
    url: "<%=e.website%>",
    description: "<%=e.description%>",
    category: "<%=e.hostclass%>",
    invited: <%=[]||e.attending.html_safe%>});
  <% end %>

  // Control tab displays
  $(".tab").click(function() {
    var category = $(this).attr("data-category");
    console.log(category);

    if (category == "all") {
      $('.fc-event-container').animate({
        opacity: 1
      }, 500);
    }
    else {
      $('.fc-event-container').animate({
        opacity: 0.5
      }, 200);
      $('.fc-content[data-category="' + category + '"]').parent().parent().animate({
        opacity: 1
      }, 500);
    }
  });





  $('.modal-trigger').leanModal();
});
</script>

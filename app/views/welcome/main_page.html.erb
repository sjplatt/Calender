<h1>Welcome#main_page</h1>

<button id="logout">logout</button>

<!--button id="create">CREATE EVENT</button-->
<div id="event-creator">
  Name: <input type="text" id="name"><br>
  Start date/time e.g. 2015-09-05, or 2015-09-05T12:30:00 <input type="text" id="startdate"><br>
  End date/time: <input type="text" id="enddate"><br>
  Location: <input type="text" id="location"><br>
  Website: <input type="text" id="website"><br>
  Description: <input type="text" id="description"><br>
  
  <div id="category">Category:
  <form id="category-form">
  <% @categories.each do |c| %>
    <label>
    <input type="radio" name="category" data-category=<%= c %>> <%= c %>
    </label>
  <% end %>
  </form>
  </div>

  <br>
  
  <div id="invited">Invite others:
  <form id="invite-form">
  <% @friends.each do |f| %>
    <label>
    <input type="checkbox" name="invited" data-id=<%= f.facebookid %>> <%= f.name %>
    </label>
  <% end %>
  </form>
  </div>

  <br>

  <button id="event-done">DONE</button>
</div>

<div class="category-tabs">
  <span class="tab" data-category="all">All</span>
<% @categories.each do |c| %>
  <span class="tab" data-category=<%= c %>>Visible to <%= c %></span>
<% end %>
</div>

<div id="calendar"></div>

<script>



$(document).ready(function() {
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '922632911135836',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.4' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));
  
  function testAPI() {
    console.log('Welcome!');

    /*FB.api('/me?fields=id,name', function(self_response) {
      console.log('Successful login for: ' + self_response.name);
      login_id = self_response.id;
    });*/
  }







  $("#logout").click(function() {
    FB.logout(function(response) {
    });
  });

  var events = [];

  $('#calendar').fullCalendar({
  });

  $("#calendar").fullCalendar("addEventSource",events);

  $("#event-done").click(function() {
    var title = $("#name").val();
    var start = $("#startdate").val();
    var end = $("#enddate").val();
    var location = $("#location").val();
    var url = $("#website").val();
    var description = $("#description").val();

    var category = $('input[name="category"]:checked').parent().text().trim();
    //console.log(category);

    var invited = [];
    $('input[name="invited"]:checked').each(function(index,elem) {
      invited.push($(elem).attr("data-id"));
    });
    //console.log(invited);

    var eventObj = {
      title: title, //
      start: start, //
      end: end, //
      location: location,
      url: url, 
      description: description,
      category: category,
      invited: invited
    };

    events.push(eventObj);

    //var eventObj = addToCalendar(title,start,end,location,url,description,category,invited);

    //addExtraAttrsTo(title);

    // Readd everything in events to calendar
    // Once everything is added using fullCal, readd custom attributes
    
    // ADD TO DB
    create_event(eventObj, "<%= @user.facebookid %>");
  });



  function readdEvents(events) {
    console.log(events);
    $("#calendar").fullCalendar("removeEvents");
    $("#calendar").fullCalendar("addEventSource",events);
    console.log("RESETTING");
  }

  function readdExtraAttrsTo(infoObj) {
    // Add extra attributes onto event's div
    $("span.fc-title").each(function(index,elem) {
      $(elem).parent().parent().removeAttr("href");

      if ($(elem).text() == infoObj.title) {
        console.log($(elem).parent());
        $(elem).parent()
        //.css("font-size","30px")
        .attr("data-location", infoObj.location)
        .attr("data-url", infoObj.url)
        .attr("data-description", infoObj.description)
        .attr("data-category", infoObj.category)
        .attr("data-invited", infoObj.invited.toString());
      }
    });
  }
  

  // POST /ajax/create_event
  function create_event(eventObj, login_id) {
    $.post("/ajax/create_event",
      {eventObj: eventObj,
        login_id: login_id},
      function(data) {
        //console.log(data);
      });
  }


  // Load everything from DB into events
  <% @events.each do |e| %>
  events.push({
    title: "<%=e.name%>",
    start: "<%=e.starttime%>",
    end: "<%=e.endtime%>",
    location: "<%=e.location%>",
    url: "<%=e.website%>",
    description: "<%=e.description%>",
    category: "<%=e.hostclass%>",
    invited: <%=e.attending.html_safe%>});
  <% end %>

  // Initial adding into calendar using fullCal
  readdEvents(events);
  // Initial adding of custom attributes
  <% @events.each do |e| %>
    readdExtraAttrsTo({
    title: "<%=e.name%>",
    start: "<%=e.starttime%>",
    end: "<%=e.endtime%>",
    location: "<%=e.location%>",
    url: "<%=e.website%>",
    description: "<%=e.description%>",
    category: "<%=e.hostclass%>",
    invited: <%=e.attending.html_safe%>});
  <% end %>

  // Control tab displays
  $(".tab").click(function() {
    var category = $(this).attr("data-category");
    console.log(category);

    if (category == "all") {
      $('.fc-event-container').css("visibility","visible");
    }
    else {
      $('.fc-event-container').css("visibility","hidden");
      $('.fc-content[data-category="' + category + '"]').parent().parent().css("visibility","visible");
    }
  });
});
</script>

<style>
.tab {
  border: 1px solid red;
}
</style>